/*
 * CredofasterPartnerApiLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package ke.co.credofaster.partner.apitest.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

@JsonInclude(Include.ALWAYS)
public class RegisterCallbackRequest 
        implements java.io.Serializable {
    private static final long serialVersionUID = -5017557275606258891L;
    private String url = "https://posthere.io/partner_test";
    private String tps = "10";
    private String retries = "1,5";
    /** GETTER
     * Define a reachable URL that accepts a JSON Payload as described below
     */
    @JsonGetter("url")
    public String getUrl ( ) { 
        return this.url;
    }
    
    /** SETTER
     * Define a reachable URL that accepts a JSON Payload as described below
     */
    @JsonSetter("url")
    public void setUrl (String value) { 
        this.url = value;
    }
 
    /** GETTER
     * Define the transactions per second we should use when pushing callbacks to your side
     */
    @JsonGetter("tps")
    public String getTps ( ) { 
        return this.tps;
    }
    
    /** SETTER
     * Define the transactions per second we should use when pushing callbacks to your side
     */
    @JsonSetter("tps")
    public void setTps (String value) { 
        this.tps = value;
    }
 
    /** GETTER
     * A comma separated value, containing the number of seconds to wait for any retries and the max number of retries to do, when the clients endpoint responds with an Error
     */
    @JsonGetter("retries")
    public String getRetries ( ) { 
        return this.retries;
    }
    
    /** SETTER
     * A comma separated value, containing the number of seconds to wait for any retries and the max number of retries to do, when the clients endpoint responds with an Error
     */
    @JsonSetter("retries")
    public void setRetries (String value) { 
        this.retries = value;
    }
 
}
